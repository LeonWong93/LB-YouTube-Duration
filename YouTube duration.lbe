[extension_name]
YouTube Link Handler
[insert_external]
<div>
<p>YouTube Link Handler v2.2 by LeonWong93 is installed</p>
- Originally is an extension call "YouTube Video Duration" by Christina K.
<br>- Specially modified/enhanced for the purpose of use by myself and/or Epi's LioranBoard gang
<br><br>Greetings from Leon : Have fun on streaming guys =D
</div>
<br>
<div>
<button type="button" onclick="yt_link_test()">Test Result</button>
<br>
Youtube Link: <input type="text" id="yt_link" size="50" style="margin:5px 0px"; value="https://youtu.be/u31a1i3qvMw?t=10">
<br>
Country Code: <input type="text" id="yt_cc" size="5" style="margin:5px 0px"; value="MY">
<br>
^ 2 Digit ISO Country Code, <a target="_blank" href="https://countrycode.org/malaysia">>> check yours from here <<</a>
</div>
<!--
 * @name: YouTube Link Handler, @version: 2.2 , @author: LeonWong93
 * Originally is "YouTube Video Duration" by Christina K.
 * Specially modified/enhanced for the purpose of use by myself and/or Epi's LioranBoard gang
 * -->
[insert_command]
lioranboardclient.send('{"type":"MESSAGE","topic":"ExtensionCommand","name":"YouTube Link Handler","boxcount":6,"boxname1":"string_link","boxtype1":"string","boxname2":"variable_videoid","boxtype2":"string","boxname3":"variable_duration","boxtype3":"string","boxname4":"string_cc","boxtype4":"string","boxname5":"variable_restricted","boxtype5":"string","boxname6":"debug_info|0|1|","boxtype6":"string"}');
[insert_hook]
case "YouTubeLinkHandler":{
YTLinkHandler(LioranBoardJSON.string_link,LioranBoardJSON.variable_videoid,LioranBoardJSON.variable_duration,LioranBoardJSON.string_cc,LioranBoardJSON.variable_restricted,LioranBoardJSON.debug_info)
}break
[insert_script]
function YTLinkHandler(string_link, variable_videoid, variable_duration,string_cc, variable_restricted, debug_info) {

var string_cc = string_cc.toUpperCase();

	startSeconds = string_link.replace("list=","").split("t=")[1];
    if (startSeconds == undefined) {
      startSeconds = '0';
     } else {
      startSeconds = parseInt(startSeconds);
      startSeconds = startSeconds*1000;
    }
  
    var ID = '';
    url = string_link.replace(/(>|<)/gi, '').split(/(vi\/|v=|\/v\/|youtu\.be\/|\/embed\/|\/shorts\/)/);
    if (url[2] !== undefined) {
      ID = url[2].split(/[^0-9a-z_\-]/i);
      ID = ID[0];
    } else {
      ID = url;
    }

  const data = {
    key: 'AIzaSyBhhQp0IhB2kKhbkS6BNZ9odEhQpbYMiTY',
    id: ID,
    part: 'contentDetails,status',
  };
  const YTbase_url = "https://www.googleapis.com/youtube/v3/videos";
  const YTurl = new URL(YTbase_url);
  Object.entries(data).forEach(([key, value]) => YTurl.searchParams.append(key, value));
  const YTduration = fetch(YTurl, {
    method: 'GET'
  });

  YTduration.then(response => {
    return response.json();
  }).then(data => {
    try {
	
	embeddable = data.items[0].status.embeddable;
	if (embeddable == false){
		var embeddable = "0";
		var embeddablemsg = "False (Not Embeddable)";
		var embeddabletag = " [Not Embeddable]";
	} else {
		var embeddable = "1";
		var embeddablemsg = "True (Is Embeddable)";
		var embeddabletag = "";
	}
	
	ytRating = data.items[0].contentDetails.contentRating.ytRating;
	if (ytRating == undefined){
		var ytRating = "0";
		var ytRatingmsg = "0 (False)";
		var ytRatingtag = "";
	} else {
		var ytRating = "1";
		var ytRatingmsg = "1 (True)";
		var ytRatingtag = " [Age]";
	}
	
	if (data.items[0].contentDetails.regionRestriction == undefined){
		var blocked = "0";
		var blockedmsg = "0 (False) [regionRestriction not found]";
		var blockedtag = "";
	} else if (data.items[0].contentDetails.regionRestriction.blocked == undefined){
		var blocked = "0";
		var blockedmsg = "0 (False) [blocked not found]";
		var blockedtag = "";
	} else if (data.items[0].contentDetails.regionRestriction.blocked.includes(string_cc)){
		var blocked = "1";
		var blockedmsg = "1 (True)";
		var blockedtag = " [Country]";
	} else {
		var blocked = "0";
		var blockedmsg = "0 (False)";
		var blockedtag = "";
	}
	
      duration = data.items[0].contentDetails.duration;
      duration = moment.duration(duration);
      duration = duration._milliseconds;
	  
	  LeftOver = duration-startSeconds;
	  
	if (startSeconds != "0"){
		var videoID = ID + "&&t=" + startSeconds/1000;
	} else {
		var videoID = ID;
	}
	
	if (duration == "0") {
		var durationtag = " [Possible Live Stream]";
	} else {
		var durationtag = "";
	}
	
	var restricted = "0";
	
	if (embeddable == "0") {
		var restricted = Number(restricted) + 1;
	}
	if (ytRating == "1") {
		var restricted = Number(restricted) + 1;
	}
	if (blocked == "1") {
		var restricted = Number(restricted) + 1;
	}
	if (duration == "0") {
		var restricted = Number(restricted) + 1;
	}
	
	if (restricted == "0"){
		var restrictedmsg = "0 (False)";
	} else {
		var restrictedmsg = restricted + " (True)";
	}
	  
	if (debug_info == "1") {
	lioranboardclient.send('{"type":"MESSAGE","topic":"PopupMessage","message":"Country Code : ' + string_cc + '\nOriginal Link/Message : ' + string_link + '\n\nVideoID : ' + ID + '\nFull Duration : ' + duration + ' (' + duration/1000 + 'sec) ' + durationtag + '\nStart at Duration (t=) : ' + startSeconds + ' (' + startSeconds/1000 + 'sec)\nLeft over Duration : ' + LeftOver + ' (' + LeftOver/1000 + 'sec)\nIs Embeddable : ' + embeddablemsg + '\nAge Restrict : ' + ytRatingmsg + '\nCountry Restrict : ' + blockedmsg + '\nConclusion of Restrict : ' + restrictedmsg + embeddabletag + ytRatingtag + blockedtag + durationtag + '\n\nExtension Return:\nVariant_VideoID : ' + videoID + '\nVariant_Duration : ' + LeftOver + '\nVariant_Restricted : ' + restricted + '"}')
	}
	
	lioranboardclient.send('{"type":"MESSAGE","topic":"SetVariable","variable":"' + variable_videoid + '","value":"' + videoID + '"}');
	
	lioranboardclient.send('{"type":"MESSAGE","topic":"SetValue","valuename":"' + variable_duration + '","value":' + LeftOver + '}');
	
	lioranboardclient.send('{"type":"MESSAGE","topic":"SetValue","valuename":"' + variable_restricted + '","value":' + restricted + '}');
	
    } catch (err) {
      lioranboardclient.send('{"type":"MESSAGE","topic":"AlertMessage","message":"Error fetching YouTube info.\nSomething wrong in code or return data"}')
    }
	
  });
}

//////////////////////////////////////////////////


function yt_link_test() {
	
var string_link = yt_link.value || 'https://youtu.be/u31a1i3qvMw?t=10';
var string_cc = yt_cc.value.toUpperCase() || 'MY';
var debug_info = '1';
	
	startSeconds = string_link.replace("list=","").split("t=")[1];
    if (startSeconds == undefined) {
      startSeconds = '0';
     } else {
      startSeconds = parseInt(startSeconds);
      startSeconds = startSeconds*1000;
    }
  
    var ID = '';
    url = string_link.replace(/(>|<)/gi, '').split(/(vi\/|v=|\/v\/|youtu\.be\/|\/embed\/|\/shorts\/)/);
    if (url[2] !== undefined) {
      ID = url[2].split(/[^0-9a-z_\-]/i);
      ID = ID[0];
    } else {
      ID = url;
    }

  const data = {
    key: 'AIzaSyBhhQp0IhB2kKhbkS6BNZ9odEhQpbYMiTY',
    id: ID,
    part: 'contentDetails,status',
  };
  const YTbase_url = "https://www.googleapis.com/youtube/v3/videos";
  const YTurl = new URL(YTbase_url);
  Object.entries(data).forEach(([key, value]) => YTurl.searchParams.append(key, value));
  const YTduration = fetch(YTurl, {
    method: 'GET'
  });

  YTduration.then(response => {
    return response.json();
  }).then(data => {
    try {
	
	embeddable = data.items[0].status.embeddable;
	if (embeddable == false){
		var embeddable = "0";
		var embeddablemsg = "False (Not Embeddable)";
		var embeddabletag = " [Not Embeddable]";
	} else {
		var embeddable = "1";
		var embeddablemsg = "True (Is Embeddable)";
		var embeddabletag = "";
	}
	
	ytRating = data.items[0].contentDetails.contentRating.ytRating;
	if (ytRating == undefined){
		var ytRating = "0";
		var ytRatingmsg = "0 (False)";
		var ytRatingtag = "";
	} else {
		var ytRating = "1";
		var ytRatingmsg = "1 (True)";
		var ytRatingtag = " [Age]";
	}
	
	if (data.items[0].contentDetails.regionRestriction == undefined){
		var blocked = "0";
		var blockedmsg = "0 (False) [regionRestriction not found]";
		var blockedtag = "";
	} else if (data.items[0].contentDetails.regionRestriction.blocked == undefined){
		var blocked = "0";
		var blockedmsg = "0 (False) [blocked not found]";
		var blockedtag = "";
	} else if (data.items[0].contentDetails.regionRestriction.blocked.includes(string_cc)){
		var blocked = "1";
		var blockedmsg = "1 (True)";
		var blockedtag = " [Country]";
	} else {
		var blocked = "0";
		var blockedmsg = "0 (False)";
		var blockedtag = "";
	}
	
      duration = data.items[0].contentDetails.duration;
      duration = moment.duration(duration);
      duration = duration._milliseconds;
	  
	  LeftOver = duration-startSeconds;
	  
	if (startSeconds != "0"){
		var videoID = ID + "&&t=" + startSeconds/1000;
	} else {
		var videoID = ID;
	}
	
	if (duration == "0") {
		var durationtag = " [Possible Live Stream]";
	} else {
		var durationtag = "";
	}
	
	var restricted = "0";
	
	if (embeddable == "0") {
		var restricted = Number(restricted) + 1;
	}
	if (ytRating == "1") {
		var restricted = Number(restricted) + 1;
	}
	if (blocked == "1") {
		var restricted = Number(restricted) + 1;
	}
	if (duration == "0") {
		var restricted = Number(restricted) + 1;
	}
	
	if (restricted == "0"){
		var restrictedmsg = "0 (False)";
	} else {
		var restrictedmsg = restricted + " (True)";
	}
	  
	if (debug_info == "1") {
	lioranboardclient.send('{"type":"MESSAGE","topic":"PopupMessage","message":"Country Code : ' + string_cc + '\nOriginal Link/Message : ' + string_link + '\n\nVideoID : ' + ID + '\nFull Duration : ' + duration + ' (' + duration/1000 + 'sec) ' + durationtag + '\nStart at Duration (t=) : ' + startSeconds + ' (' + startSeconds/1000 + 'sec)\nLeft over Duration : ' + LeftOver + ' (' + LeftOver/1000 + 'sec)\nIs Embeddable : ' + embeddablemsg + '\nAge Restrict : ' + ytRatingmsg + '\nCountry Restrict : ' + blockedmsg + '\nConclusion of Restrict : ' + restrictedmsg + embeddabletag + ytRatingtag + blockedtag + durationtag + '\n\nExtension Return:\nVariant_VideoID : ' + videoID + '\nVariant_Duration : ' + LeftOver + '\nVariant_Restricted : ' + restricted + '"}')
	}
	
    } catch (err) {
      lioranboardclient.send('{"type":"MESSAGE","topic":"AlertMessage","message":"Error fetching YouTube info.\nSomething wrong in code or return data"}')
    }
	
  });
}
[insert_over]